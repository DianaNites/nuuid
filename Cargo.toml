[package]
name = "nuuid"
version = "0.4.7"
authors = ["Diana"]
edition = "2021"
license = "MIT OR Apache-2.0"
description = "A new, no_std, UUID Library"
repository = "https://github.com/DianaNites/nuuid"
documentation = "https://docs.rs/nuuid"
readme = "README.md"
keywords = ["uuid", "guid", "unique"]
categories = ["no-std", "parser-implementations"]

[dependencies]
md-5 = { version = "0.10.5", default-features = false }
sha-1 = { version = "0.10.1", default-features = false }
serde = { version = "1.0.163", optional = true, default-features = false, features = [
    "derive",
] }
rand_chacha = { version = "0.3.1", default-features = false }
rand_core = { version = "0.6.4", default-features = false }
hex-simd = { version = "0.8.0", default-features = false }

[dev-dependencies]
criterion = { version = "0.3.6", features = ["html_reports"] }
uuid_ = { version = "1.3.3", package = "uuid", features = ["v4", "v5", "v1"] }

[features]
default = ["getrandom", "std"]

# Implements some traits from std.
std = []

# Enable usage of `getrandom`.
# This can be used in no_std environments, but usually requires OS system libraries.
getrandom = ["rand_core/getrandom"]

# Enable experimental UUID formats from https://github.com/ietf-wg-uuidrev/rfc4122bis
# There is no stability guarantee for these formats and API or output may change when the draft does
experimental_uuid = []

[[bench]]
name = "bench"
harness = false

[profile.release]
debug = true

[profile.bench]
debug = true

[package.metadata.docs.rs]
# all-features = true
# default-target = "thumbv6m-none-eabi"
rustdoc-args = ["--cfg", "docsrs"]
features = ["experimental_uuid"]
